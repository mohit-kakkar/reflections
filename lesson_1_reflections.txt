How did viewing a diff between two versions of a file help you see the bug that was introduced?
	Using FC program to view a diff between two versions of a file helped me spot the errors more easily because the program figured out the exact pieces of text having difference(s).
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	Having an easy access to the entire history of a file makes it a lot easier to revert back to the previous version if somehow some unwanted change occurs in the new version.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	The pros is that each commit represents a change that the individual wants to save whereas the cons is that the change isn't reflected in cases of circumstances out of control of user.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	It is because it might be the case that multiple files are interrelated and allowing saving multiple files in one commit allows us to save the state of the files at any point in time.
How can you use the commands git log and git diff to view the history of files?
	git log shows us the history of commits along with the associated commit message. git diff shows us the differences between the two commits.
How might using version control make you more confident to make changes that could break something?
	Using version control makes us more confident as it provides us a way to 'checkout' the commit i.e. temporarily restore the files to how they were at the time the commit was made. This way we can figure out easily at what point the bug was introduced.
Now that you have your workspace set up, what do you want to try using Git for?
	I'll be using Git for having version control as it would make me a better and efficienct programmer.